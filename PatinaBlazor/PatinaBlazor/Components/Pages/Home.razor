@page "/"
@using PatinaBlazor.Data
@using PatinaBlazor.Services
@inject ICollectableService CollectableService
@rendermode InteractiveServer

<PageTitle>Welcome to Silzell.net</PageTitle>

<div class="container-fluid">
    <div class="row justify-content-center">
        <div class="col-lg-10 col-xl-8">
            <div class="text-center mb-5">
                <h1 class="display-4 fw-bold text-primary mb-3">Welcome to Silzell.net</h1>
                <p class="lead text-muted">Your digital home for collecting and sharing treasures</p>
            </div>

            <div class="row g-4 mb-5">
                <div class="col-md-4">
                    <div class="card h-100 border-0 shadow-sm">
                        <div class="card-body text-center p-4">
                            <div class="mb-3">
                                <i class="bi bi-collection-fill text-primary" style="font-size: 3rem;"></i>
                            </div>
                            <h4 class="card-title">Track Your Collections</h4>
                            <p class="card-text text-muted">Organize and catalog your collectables with detailed information, photos, and personal notes.</p>
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="card h-100 border-0 shadow-sm">
                        <div class="card-body text-center p-4">
                            <div class="mb-3">
                                <i class="bi bi-people-fill text-success" style="font-size: 3rem;"></i>
                            </div>
                            <h4 class="card-title">Connect with Collectors</h4>
                            <p class="card-text text-muted">Share your passion with fellow collectors and discover amazing collections from around the world.</p>
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="card h-100 border-0 shadow-sm">
                        <div class="card-body text-center p-4">
                            <div class="mb-3">
                                <i class="bi bi-search text-info" style="font-size: 3rem;"></i>
                            </div>
                            <h4 class="card-title">Discover & Explore</h4>
                            <p class="card-text text-muted">Search through collections to find that perfect piece you've been looking for.</p>
                        </div>
                    </div>
                </div>
            </div>

            <div class="text-center mb-4">
                <p class="fs-5 text-muted mb-4">
                    Whether you collect coins, stamps, cards, or any other treasures, Silzell.net provides the tools you need to
                    document, organize, and share your passion with the collecting community.
                </p>

                <AuthorizeView>
                    <Authorized>
                        <a href="/collectables" class="btn btn-primary btn-lg me-3">
                            <i class="bi bi-gem me-2"></i>View Collections
                        </a>
                    </Authorized>
                    <NotAuthorized>
                        <a href="/Account/Register" class="btn btn-primary btn-lg me-3">
                            <i class="bi bi-person-plus me-2"></i>Get Started
                        </a>
                        <a href="/Account/Login" class="btn btn-outline-secondary btn-lg">
                            <i class="bi bi-box-arrow-in-right me-2"></i>Sign In
                        </a>
                    </NotAuthorized>
                </AuthorizeView>
            </div>

            <!-- Recent Collectables Carousel -->
            <div class="mt-5 mb-5" style="padding-top: 10px;">
                <div class="text-center mb-4">
                    <h2 class="h3 text-muted">Recent Collectables</h2>
                    <p class="text-muted">Discover the latest additions to our collectors' treasures</p>
                </div>

                @if (recentCollectables != null && recentCollectables.Any())
                {
                    <div class="d-flex justify-content-center">
                        <div class="carousel-container" style="max-width: 960px; width: 100%; position: relative;">
                            <div class="custom-carousel">
                                <div class="carousel-inner" style="overflow: hidden;">
                                    <div class="carousel-track" style="display: flex; transform: translateX(-@(currentSlide * 100)%); transition: transform 0.3s ease;">
                                        @for (int i = 0; i < Math.Ceiling((double)recentCollectables.Count / itemsPerSlide); i++)
                                        {
                                            <div class="carousel-slide" style="flex: 0 0 100%; width: 100%;">
                                                <div class="row g-3 justify-content-center" style="padding: 10px 0;">
                                                    @foreach (var collectable in recentCollectables.Skip(i * itemsPerSlide).Take(itemsPerSlide))
                                                    {
                                                        <div class="col-4">
                                                            <CollectableCarouselCard Collectable="collectable" OnImageClick="ShowImageModal" />
                                                        </div>
                                                    }
                                                </div>
                                            </div>
                                        }
                                    </div>
                                </div>

                                @if (totalSlides > 1)
                                {
                                    <button class="custom-carousel-btn prev-btn" @onclick="PreviousSlide" type="button" style="position: absolute; left: -50px; top: 50%; transform: translateY(-50%); width: 40px; height: 40px; background-color: rgba(0,0,0,0.6); border: none; border-radius: 50%; color: white; cursor: pointer; display: flex; align-items: center; justify-content: center;">
                                        <i class="bi bi-chevron-left"></i>
                                    </button>
                                    <button class="custom-carousel-btn next-btn" @onclick="NextSlide" type="button" style="position: absolute; right: -50px; top: 50%; transform: translateY(-50%); width: 40px; height: 40px; background-color: rgba(0,0,0,0.6); border: none; border-radius: 50%; color: white; cursor: pointer; display: flex; align-items: center; justify-content: center;">
                                        <i class="bi bi-chevron-right"></i>
                                    </button>
                                }
                            </div>
                        </div>
                    </div>
                }
                else if (recentCollectables != null)
                {
                    <div class="text-center text-muted">
                        <i class="bi bi-collection" style="font-size: 3rem;"></i>
                        <p class="mt-2">No collectables have been added yet. Be the first to share your collection!</p>
                    </div>
                }
                else
                {
                    <div class="text-center">
                        <div class="spinner-border text-primary" role="status">
                            <span class="visually-hidden">Loading...</span>
                        </div>
                    </div>
                }
            </div>

            <div class="mt-5 d-flex justify-content-center">
                <HitCounter PagePath="/" />
            </div>
        </div>
    </div>
</div>

<ImageModal @ref="imageModal" />

@code {
    private List<Collectable>? recentCollectables;
    private int itemsPerSlide = 3; // Number of items to show per carousel slide
    private ImageModal? imageModal;
    private int currentSlide = 0;
    private int totalSlides => recentCollectables != null ? (int)Math.Ceiling((double)recentCollectables.Count / itemsPerSlide) : 0;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            recentCollectables = await CollectableService.GetRecentCollectablesAsync(10);
        }
        catch (Exception)
        {
            // Log error or handle gracefully
            recentCollectables = new List<Collectable>();
        }
    }

    private async Task ShowImageModal(Collectable collectable)
    {
        if (imageModal != null && collectable.Images.Any())
        {
            var imageList = collectable.Images.OrderBy(img => img.IsMainImage ? 0 : img.DisplayOrder).ToList();
            await imageModal.ShowModal(imageList, 0);
        }
    }

    private void NextSlide()
    {
        if (totalSlides > 1)
        {
            currentSlide = (currentSlide + 1) % totalSlides;
            StateHasChanged();
        }
    }

    private void PreviousSlide()
    {
        if (totalSlides > 1)
        {
            currentSlide = currentSlide == 0 ? totalSlides - 1 : currentSlide - 1;
            StateHasChanged();
        }
    }
}
